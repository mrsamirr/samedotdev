"use client"

import { useState } from "react"
import { Plus, Minus } from "lucide-react"

const faqs = [
  {
    question: "Can I test same dev before subscribing?",
    answer:
      "Yes, you can test same dev for free. Simply sign up for a free account, and you'll receive complimentary credits to explore our AI models. These credits allow you to generate wireframes, high-fidelity designs, and predictive heatmaps without any cost.",
  },
  {
    question: "Can I customize the designs generated by the AI?",
    answer:
      "same dev provides extensive customization options for all AI-generated designs. You can modify colors, layouts, typography, and components to match your brand guidelines and specific requirements.",
  },
  {
    question: "Does the tool support iterative design processes?",
    answer:
      "Yes, same dev is built for iterative design workflows. You can easily refine and iterate on your designs, make adjustments based on feedback, and continuously improve your prototypes throughout the design process.",
  },
  {
    question: "What types of designs can I create with same dev?",
    answer:
      "same dev supports a wide range of design types including wireframes, high-fidelity mockups, mobile app designs, web interfaces, dashboard layouts, and more. Our AI can adapt to various design styles and requirements.",
  },
  {
    question: "Can I purchase additional credits?",
    answer:
      "Yes, you can purchase additional credits at any time through your account dashboard. We offer flexible credit packages to suit different usage needs and project requirements.",
  },
  {
    question: "What is your refund policy?",
    answer:
      "We offer a 30-day money-back guarantee for all subscription plans. If you're not satisfied with same dev within the first 30 days, you can request a full refund through our support team.",
  },
  {
    question: "How do I cancel my subscription?",
    answer:
      "You can cancel your subscription at any time through your account settings. Your access will continue until the end of your current billing period, and you won't be charged for the next cycle.",
  },
  {
    question: "How can I get an invoice for my subscription?",
    answer:
      "Invoices are automatically generated and sent to your registered email address after each payment. You can also download invoices from your account dashboard at any time.",
  },
  {
    question: "Is my data safe? Will it be used to train AI models?",
    answer:
      "Your data security is our top priority. We use enterprise-grade encryption and security measures. Your designs and data are never used to train our AI models without explicit consent.",
  },
  {
    question: "Still have questions?",
    answer:
      "If you have any other questions or need assistance, please don't hesitate to contact our support team. We're here to help you get the most out of same dev.",
  },
]

export function FAQSection() {
  const [openItems, setOpenItems] = useState<number[]>([])

  const toggleItem = (index: number) => {
    setOpenItems((prev) => (prev.includes(index) ? prev.filter((i) => i !== index) : [...prev, index]))
  }

  return (
    <section className="bg-white py-16 px-6">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold text-gray-900 mb-4">FAQs</h2>
          <p className="text-gray-600 text-lg">What you need to know about this same dev</p>
        </div>

        <div className="space-y-4">
          {faqs.map((faq, index) => (
            <div key={index} className="border border-gray-200 rounded-lg">
              <button
                onClick={() => toggleItem(index)}
                className="w-full px-6 py-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors"
              >
                <span className="font-medium text-gray-900 pr-4">{faq.question}</span>
                <div className="flex-shrink-0 w-6 h-6 rounded-full bg-blue-600 flex items-center justify-center">
                  {openItems.includes(index) ? (
                    <Minus className="w-4 h-4 text-white" />
                  ) : (
                    <Plus className="w-4 h-4 text-white" />
                  )}
                </div>
              </button>
              {openItems.includes(index) && (
                <div className="px-6 pb-4">
                  <p className="text-gray-600 leading-relaxed">{faq.answer}</p>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>
  )
}
